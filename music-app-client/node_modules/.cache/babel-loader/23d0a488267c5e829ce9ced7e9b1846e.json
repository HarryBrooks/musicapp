{"ast":null,"code":"var _jsxFileName = \"/Users/harrybrooks/Documents/Computing/Music App/music-app-client/src/containers/CreateTask.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { generateKeyPair } from 'crypto';\nimport { AWSPinpointProvider } from 'aws-amplify';\nvar CLIENT_ID = '274431699577-v1a3g430bj3lrjg9digcps7ckq7puj3b.apps.googleusercontent.com';\nvar API_KEY = 'AIzaSyAVSZjyDeQUNPP7DSURnMNVliI5XzZPFTc'; // Array of API discovery doc URLs for APIs used by the quickstart\n\nvar DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"]; // Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\n\nvar SCOPES = 'https://www.googleapis.com/auth/drive.metadata.readonly';\n\nfunction handleClientLoad() {\n  gapi.load('client:auth2', initClient);\n}\n/**\n *  Initializes the API client library and sets up sign-in state\n *  listeners.\n */\n\n\nfunction initClient() {\n  gapi.client.init({\n    apiKey: API_KEY,\n    clientId: CLIENT_ID,\n    discoveryDocs: DISCOVERY_DOCS,\n    scope: SCOPES\n  }).then(function () {\n    // Listen for sign-in state changes.\n    gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus); // Handle the initial sign-in state.\n\n    updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n    authorizeButton.onclick = handleAuthClick;\n    signoutButton.onclick = handleSignoutClick;\n  }, function (error) {\n    appendPre(JSON.stringify(error, null, 2));\n  });\n}\n/**\n *  Called when the signed in status changes, to update the UI\n *  appropriately. After a sign-in, the API is called.\n */\n\n\nfunction updateSigninStatus(isSignedIn) {\n  if (isSignedIn) {\n    authorizeButton.style.display = 'none';\n    signoutButton.style.display = 'block';\n    listFiles();\n  } else {\n    authorizeButton.style.display = 'block';\n    signoutButton.style.display = 'none';\n  }\n}\n/** \n *  Sign in the user upon button click.\n */\n\n\nfunction handleAuthClick(event) {\n  gapi.auth2.getAuthInstance().signIn();\n}\n/**\n *  Sign out the user upon button click.\n */\n\n\nfunction handleSignoutClick(event) {\n  gapi.auth2.getAuthInstance().signOut();\n}\n/**\n * Append a pre element to the body containing the given message\n * as its text node. Used to display the results of the API call.\n *\n * @param {string} message Text to be placed in pre element.\n */\n\n\nfunction appendPre(message) {\n  var pre = document.getElementById('content');\n  var textContent = document.createTextNode(message + '\\n');\n  pre.appendChild(textContent);\n}\n/**\n * Print files.\n */\n\n\nfunction listFiles() {\n  gapi.client.drive.files.list({\n    'pageSize': 10,\n    'fields': \"nextPageToken, files(id, name)\"\n  }).then(function (response) {\n    appendPre('Files:');\n    var files = response.result.files;\n\n    if (files && files.length > 0) {\n      for (var i = 0; i < files.length; i++) {\n        var file = files[i];\n        appendPre(file.name + ' (' + file.id + ')');\n      }\n    } else {\n      appendPre('No files found.');\n    }\n  });\n}\n\nconst CreateTask = props => {\n  const addFileToDrive = () => {\n    console.log(\"called\");\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \"Create a task\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: props.signOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"Sign out\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 22\n    }\n  }, \"This will be the active area\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: addFileToDrive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Add file to drive\")));\n};\n\nexport default CreateTask;","map":{"version":3,"sources":["/Users/harrybrooks/Documents/Computing/Music App/music-app-client/src/containers/CreateTask.js"],"names":["React","Container","Row","Col","Button","generateKeyPair","AWSPinpointProvider","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","handleClientLoad","gapi","load","initClient","client","init","apiKey","clientId","discoveryDocs","scope","then","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","get","authorizeButton","onclick","handleAuthClick","signoutButton","handleSignoutClick","error","appendPre","JSON","stringify","style","display","listFiles","event","signIn","signOut","message","pre","document","getElementById","textContent","createTextNode","appendChild","drive","files","list","response","result","length","i","file","name","id","CreateTask","props","addFileToDrive","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,eAAT,QAAgC,QAAhC;AACA,SAASC,mBAAT,QAAoC,aAApC;AAEA,IAAIC,SAAS,GAAG,0EAAhB;AACA,IAAIC,OAAO,GAAG,yCAAd,C,CACA;;AACA,IAAIC,cAAc,GAAG,CAAC,4DAAD,CAArB,C,CAEA;AACA;;AACA,IAAIC,MAAM,GAAG,yDAAb;;AAEA,SAASC,gBAAT,GAA4B;AACxBC,EAAAA,IAAI,CAACC,IAAL,CAAU,cAAV,EAA0BC,UAA1B;AACH;AAED;;;;;;AAIA,SAASA,UAAT,GAAsB;AACtBF,EAAAA,IAAI,CAACG,MAAL,CAAYC,IAAZ,CAAiB;AACbC,IAAAA,MAAM,EAAET,OADK;AAEbU,IAAAA,QAAQ,EAAEX,SAFG;AAGbY,IAAAA,aAAa,EAAEV,cAHF;AAIbW,IAAAA,KAAK,EAAEV;AAJM,GAAjB,EAKGW,IALH,CAKQ,YAAY;AAChB;AACAT,IAAAA,IAAI,CAACU,KAAL,CAAWC,eAAX,GAA6BC,UAA7B,CAAwCC,MAAxC,CAA+CC,kBAA/C,EAFgB,CAIhB;;AACAA,IAAAA,kBAAkB,CAACd,IAAI,CAACU,KAAL,CAAWC,eAAX,GAA6BC,UAA7B,CAAwCG,GAAxC,EAAD,CAAlB;AACAC,IAAAA,eAAe,CAACC,OAAhB,GAA0BC,eAA1B;AACAC,IAAAA,aAAa,CAACF,OAAd,GAAwBG,kBAAxB;AACH,GAbD,EAaG,UAASC,KAAT,EAAgB;AACfC,IAAAA,SAAS,CAACC,IAAI,CAACC,SAAL,CAAeH,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAD,CAAT;AACH,GAfD;AAgBC;AAED;;;;;;AAIA,SAASP,kBAAT,CAA4BF,UAA5B,EAAwC;AACxC,MAAIA,UAAJ,EAAgB;AACZI,IAAAA,eAAe,CAACS,KAAhB,CAAsBC,OAAtB,GAAgC,MAAhC;AACAP,IAAAA,aAAa,CAACM,KAAd,CAAoBC,OAApB,GAA8B,OAA9B;AACAC,IAAAA,SAAS;AACZ,GAJD,MAIO;AACHX,IAAAA,eAAe,CAACS,KAAhB,CAAsBC,OAAtB,GAAgC,OAAhC;AACAP,IAAAA,aAAa,CAACM,KAAd,CAAoBC,OAApB,GAA8B,MAA9B;AACH;AACA;AAED;;;;;AAGA,SAASR,eAAT,CAAyBU,KAAzB,EAAgC;AAChC5B,EAAAA,IAAI,CAACU,KAAL,CAAWC,eAAX,GAA6BkB,MAA7B;AACC;AAED;;;;;AAGA,SAAST,kBAAT,CAA4BQ,KAA5B,EAAmC;AACnC5B,EAAAA,IAAI,CAACU,KAAL,CAAWC,eAAX,GAA6BmB,OAA7B;AACC;AAED;;;;;;;;AAMA,SAASR,SAAT,CAAmBS,OAAnB,EAA4B;AAC5B,MAAIC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAV;AACA,MAAIC,WAAW,GAAGF,QAAQ,CAACG,cAAT,CAAwBL,OAAO,GAAG,IAAlC,CAAlB;AACAC,EAAAA,GAAG,CAACK,WAAJ,CAAgBF,WAAhB;AACC;AAED;;;;;AAGA,SAASR,SAAT,GAAqB;AACrB3B,EAAAA,IAAI,CAACG,MAAL,CAAYmC,KAAZ,CAAkBC,KAAlB,CAAwBC,IAAxB,CAA6B;AACzB,gBAAY,EADa;AAEzB,cAAU;AAFe,GAA7B,EAGG/B,IAHH,CAGQ,UAASgC,QAAT,EAAmB;AACvBnB,IAAAA,SAAS,CAAC,QAAD,CAAT;AACA,QAAIiB,KAAK,GAAGE,QAAQ,CAACC,MAAT,CAAgBH,KAA5B;;AACA,QAAIA,KAAK,IAAIA,KAAK,CAACI,MAAN,GAAe,CAA5B,EAA+B;AAC/B,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACI,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACnC,YAAIC,IAAI,GAAGN,KAAK,CAACK,CAAD,CAAhB;AACAtB,QAAAA,SAAS,CAACuB,IAAI,CAACC,IAAL,GAAY,IAAZ,GAAmBD,IAAI,CAACE,EAAxB,GAA6B,GAA9B,CAAT;AACH;AACA,KALD,MAKO;AACPzB,MAAAA,SAAS,CAAC,iBAAD,CAAT;AACC;AACJ,GAdD;AAeC;;AAED,MAAM0B,UAAU,GAAIC,KAAD,IAAW;AAE1B,QAAMC,cAAc,GAAG,MAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,GAFD;;AAIA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH,KAAK,CAACnB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAJJ,CADJ,eASI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAL,CADJ,eAEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEoB,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ,CATJ,CADJ;AAgBH,CAtBD;;AAwBA,eAAeF,UAAf","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { generateKeyPair } from 'crypto';\nimport { AWSPinpointProvider } from 'aws-amplify';\n\nvar CLIENT_ID = '274431699577-v1a3g430bj3lrjg9digcps7ckq7puj3b.apps.googleusercontent.com';\nvar API_KEY = 'AIzaSyAVSZjyDeQUNPP7DSURnMNVliI5XzZPFTc';\n// Array of API discovery doc URLs for APIs used by the quickstart\nvar DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"];\n\n// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\nvar SCOPES = 'https://www.googleapis.com/auth/drive.metadata.readonly';\n\nfunction handleClientLoad() {\n    gapi.load('client:auth2', initClient);\n}\n\n/**\n *  Initializes the API client library and sets up sign-in state\n *  listeners.\n */\nfunction initClient() {\ngapi.client.init({\n    apiKey: API_KEY,\n    clientId: CLIENT_ID,\n    discoveryDocs: DISCOVERY_DOCS,\n    scope: SCOPES\n}).then(function () {\n    // Listen for sign-in state changes.\n    gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n\n    // Handle the initial sign-in state.\n    updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n    authorizeButton.onclick = handleAuthClick;\n    signoutButton.onclick = handleSignoutClick;\n}, function(error) {\n    appendPre(JSON.stringify(error, null, 2));\n});\n}\n\n/**\n *  Called when the signed in status changes, to update the UI\n *  appropriately. After a sign-in, the API is called.\n */\nfunction updateSigninStatus(isSignedIn) {\nif (isSignedIn) {\n    authorizeButton.style.display = 'none';\n    signoutButton.style.display = 'block';\n    listFiles();\n} else {\n    authorizeButton.style.display = 'block';\n    signoutButton.style.display = 'none';\n}\n}\n\n/** \n *  Sign in the user upon button click.\n */\nfunction handleAuthClick(event) {\ngapi.auth2.getAuthInstance().signIn();\n}\n\n/**\n *  Sign out the user upon button click.\n */\nfunction handleSignoutClick(event) {\ngapi.auth2.getAuthInstance().signOut();\n}\n\n/**\n * Append a pre element to the body containing the given message\n * as its text node. Used to display the results of the API call.\n *\n * @param {string} message Text to be placed in pre element.\n */\nfunction appendPre(message) {\nvar pre = document.getElementById('content');\nvar textContent = document.createTextNode(message + '\\n');\npre.appendChild(textContent);\n}\n\n/**\n * Print files.\n */\nfunction listFiles() {\ngapi.client.drive.files.list({\n    'pageSize': 10,\n    'fields': \"nextPageToken, files(id, name)\"\n}).then(function(response) {\n    appendPre('Files:');\n    var files = response.result.files;\n    if (files && files.length > 0) {\n    for (var i = 0; i < files.length; i++) {\n        var file = files[i];\n        appendPre(file.name + ' (' + file.id + ')');\n    }\n    } else {\n    appendPre('No files found.');\n    }\n});\n}\n\nconst CreateTask = (props) => {\n\n    const addFileToDrive = () => {\n        console.log(\"called\");\n    }\n\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <h1>Create a task</h1>\n                </Col>\n                <Col>\n                    <Button onClick={props.signOut}>Sign out</Button>\n                </Col>\n            </Row>\n            <Row>\n                <Col><p>This will be the active area</p></Col>\n                <Button onClick={addFileToDrive}>Add file to drive</Button>\n            </Row>\n        </Container>\n    )\n}\n\nexport default CreateTask;"]},"metadata":{},"sourceType":"module"}