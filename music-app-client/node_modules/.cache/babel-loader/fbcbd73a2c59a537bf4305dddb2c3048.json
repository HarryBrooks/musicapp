{"ast":null,"code":"var _jsxFileName = \"/Users/harrybrooks/Documents/Computing/Music App/music-app-client/src/containers/Login.js\";\nimport React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./Login.css\";\nimport { GoogleLogin } from 'react-google-login';\nexport default function Login(props) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\"\n  });\n\n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      await Auth.signIn(fields.email, fields.password);\n      props.userHasAuthenticated(true);\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  function onSignIn(googleUser) {\n    var profile = googleUser.getBasicProfile();\n    console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n\n    console.log('Name: ' + profile.getName());\n    console.log('Image URL: ' + profile.getImageUrl());\n    console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n  }\n\n  function onFailure() {\n    alert(\"Sign in failed...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"email\",\n    bsSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ControlLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(FormControl, {\n    autoFocus: true,\n    type: \"email\",\n    value: fields.email,\n    onChange: handleFieldChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    controlId: \"password\",\n    bsSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ControlLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(FormControl, {\n    type: \"password\",\n    value: fields.password,\n    onChange: handleFieldChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(LoaderButton, {\n    block: true,\n    type: \"submit\",\n    bsSize: \"large\",\n    isLoading: isLoading,\n    disabled: !validateForm(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"1098133489428-9cutu9edm3l25vrtk8d1volcq98irv5d.apps.googleusercontent.com\",\n    buttonText: \"Login with Google\",\n    onSuccess: onSignIn,\n    onFailure: onFailure,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/harrybrooks/Documents/Computing/Music App/music-app-client/src/containers/Login.js"],"names":["React","useState","Auth","FormGroup","FormControl","ControlLabel","LoaderButton","useFormFields","GoogleLogin","Login","props","isLoading","setIsLoading","fields","handleFieldChange","email","password","validateForm","length","handleSubmit","event","preventDefault","signIn","userHasAuthenticated","history","push","e","alert","message","onSignIn","googleUser","profile","getBasicProfile","console","log","getId","getName","getImageUrl","getEmail","onFailure"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,YAAjC,QAAqD,iBAArD;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,aAAP;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,MAAD,EAASC,iBAAT,IAA8BP,aAAa,CAAC;AAChDQ,IAAAA,KAAK,EAAE,EADyC;AAEhDC,IAAAA,QAAQ,EAAE;AAFsC,GAAD,CAAjD;;AAKA,WAASC,YAAT,GAAwB;AACtB,WAAOJ,MAAM,CAACE,KAAP,CAAaG,MAAb,GAAsB,CAAtB,IAA2BL,MAAM,CAACG,QAAP,CAAgBE,MAAhB,GAAyB,CAA3D;AACD;;AAED,iBAAeC,YAAf,CAA4BC,KAA5B,EAAmC;AACjCA,IAAAA,KAAK,CAACC,cAAN;AAEAT,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAI;AACF,YAAMV,IAAI,CAACoB,MAAL,CAAYT,MAAM,CAACE,KAAnB,EAA0BF,MAAM,CAACG,QAAjC,CAAN;AACAN,MAAAA,KAAK,CAACa,oBAAN,CAA2B,IAA3B;AACAb,MAAAA,KAAK,CAACc,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACVC,MAAAA,KAAK,CAACD,CAAC,CAACE,OAAH,CAAL;AACAhB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF;;AAED,WAASiB,QAAT,CAAkBC,UAAlB,EAA8B;AAC5B,QAAIC,OAAO,GAAGD,UAAU,CAACE,eAAX,EAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAASH,OAAO,CAACI,KAAR,EAArB,EAF4B,CAEW;;AACvCF,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWH,OAAO,CAACK,OAAR,EAAvB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBH,OAAO,CAACM,WAAR,EAA5B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYH,OAAO,CAACO,QAAR,EAAxB,EAL4B,CAKiB;AAC9C;;AAED,WAASC,SAAT,GAAqB;AACnBZ,IAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAER,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,OAArB;AAA6B,IAAA,MAAM,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,WAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEN,MAAM,CAACE,KAHhB;AAIE,IAAA,QAAQ,EAAED,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAUE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,UAArB;AAAgC,IAAA,MAAM,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAED,MAAM,CAACG,QAFhB;AAGE,IAAA,QAAQ,EAAEF,iBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,eAkBE,oBAAC,YAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,MAAM,EAAC,OAHT;AAIE,IAAA,SAAS,EAAEH,SAJb;AAKE,IAAA,QAAQ,EAAE,CAACM,YAAY,EALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAlBF,eA2BE,oBAAC,WAAD;AACI,IAAA,QAAQ,EAAC,2EADb;AAEI,IAAA,UAAU,EAAC,mBAFf;AAGI,IAAA,SAAS,EAAEY,QAHf;AAII,IAAA,SAAS,EAAEU,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,CADF,CADF;AAsCD","sourcesContent":["import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./Login.css\";\nimport { GoogleLogin } from 'react-google-login';\n\nexport default function Login(props) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\"\n  });\n\n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    try {\n      await Auth.signIn(fields.email, fields.password);\n      props.userHasAuthenticated(true);\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  function onSignIn(googleUser) {\n    var profile = googleUser.getBasicProfile();\n    console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log('Name: ' + profile.getName());\n    console.log('Image URL: ' + profile.getImageUrl());\n    console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n  }\n\n  function onFailure() {\n    alert(\"Sign in failed...\")\n  }\n\n  return (\n    <div className=\"Login\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <ControlLabel>Email</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <ControlLabel>Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Login\n        </LoaderButton>\n        <GoogleLogin\n            clientId=\"1098133489428-9cutu9edm3l25vrtk8d1volcq98irv5d.apps.googleusercontent.com\"\n            buttonText=\"Login with Google\"\n            onSuccess={onSignIn}\n            onFailure={onFailure}\n        />\n      </form>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}