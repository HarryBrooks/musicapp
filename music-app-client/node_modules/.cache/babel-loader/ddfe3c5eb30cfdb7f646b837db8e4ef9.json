{"ast":null,"code":"var _jsxFileName = \"/Users/harrybrooks/Documents/Computing/Music App/music-app-client/src/containers/Signup.js\";\nimport React, { useState } from \"react\";\nimport { HelpBlock, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./Signup.css\";\nexport default function Signup(props) {\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\"\n  });\n  const [newUser, setNewUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0 && fields.password === fields.confirmPassword;\n  }\n\n  function validateConfirmationForm() {\n    return fields.confirmationCode.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      const newUser = await Auth.signUp({\n        username: fields.email,\n        password: fields.password\n      });\n      setIsLoading(false);\n      setNewUser(newUser);\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n      await Auth.signIn(fields.email, fields.password);\n      props.userHasAuthenticated(true);\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  function renderConfirmationForm() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleConfirmationSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"confirmationCode\",\n      bsSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"Confirmation Code\"), /*#__PURE__*/React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"tel\",\n      onChange: handleFieldChange,\n      value: fields.confirmationCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(HelpBlock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"Please check your email for the code.\")), /*#__PURE__*/React.createElement(LoaderButton, {\n      block: true,\n      type: \"submit\",\n      bsSize: \"large\",\n      isLoading: isLoading,\n      disabled: !validateConfirmationForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Verify\"));\n  }\n\n  function renderForm() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"email\",\n      value: fields.email,\n      onChange: handleFieldChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"password\",\n      value: fields.password,\n      onChange: handleFieldChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"confirmPassword\",\n      bsSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"password\",\n      onChange: handleFieldChange,\n      value: fields.confirmPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(LoaderButton, {\n      block: true,\n      type: \"submit\",\n      bsSize: \"large\",\n      isLoading: isLoading,\n      disabled: !validateForm(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, \"Signup\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, newUser === null ? renderForm() : renderConfirmationForm());\n}","map":{"version":3,"sources":["/Users/harrybrooks/Documents/Computing/Music App/music-app-client/src/containers/Signup.js"],"names":["React","useState","HelpBlock","FormGroup","FormControl","ControlLabel","LoaderButton","useFormFields","Signup","props","fields","handleFieldChange","email","password","confirmPassword","confirmationCode","newUser","setNewUser","isLoading","setIsLoading","validateForm","length","validateConfirmationForm","handleSubmit","event","preventDefault","Auth","signUp","username","e","alert","message","handleConfirmationSubmit","confirmSignUp","signIn","userHasAuthenticated","history","push","renderConfirmationForm","renderForm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  HelpBlock,\n  FormGroup,\n  FormControl,\n  ControlLabel\n} from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./Signup.css\";\n\nexport default function Signup(props) {\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\"\n  });\n  const [newUser, setNewUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return (\n      fields.email.length > 0 &&\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  function validateConfirmationForm() {\n    return fields.confirmationCode.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n  \n    setIsLoading(true);\n  \n    try {\n      const newUser = await Auth.signUp({\n        username: fields.email,\n        password: fields.password\n      });\n      setIsLoading(false);\n      setNewUser(newUser);\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n  \n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n  \n    setIsLoading(true);\n  \n    try {\n      await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n      await Auth.signIn(fields.email, fields.password);\n  \n      props.userHasAuthenticated(true);\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <form onSubmit={handleConfirmationSubmit}>\n        <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\n          <ControlLabel>Confirmation Code</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"tel\"\n            onChange={handleFieldChange}\n            value={fields.confirmationCode}\n          />\n          <HelpBlock>Please check your email for the code.</HelpBlock>\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateConfirmationForm()}\n        >\n          Verify\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  function renderForm() {\n    return (\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <ControlLabel>Email</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <ControlLabel>Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n          <ControlLabel>Confirm Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            onChange={handleFieldChange}\n            value={fields.confirmPassword}\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Signup\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  return (\n    <div className=\"Signup\">\n      {newUser === null ? renderForm() : renderConfirmationForm()}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}